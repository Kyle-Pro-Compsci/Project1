import json
import socket
import ssl # Secure Sockets Layer, aka TLS (Transport Layer Security)

# Global Variables
HELLO_MESSAGE = '{"type": "hello", "northeastern_username": "koo.k"}\n'
ID = "to be set"
STARTING_WORD = 'slate'
#ALPHABET = 

# Encode a string word in to a JSON guess and returns it
def encode_guess(guess):
    if(len(guess) != 5):
        print("Warning! Guess is not a 5 character word")
    guess_dict = {
        "type": "guess",
        "id": ID,
        "word": guess
    }
    guess_json = json.dumps(guess_dict) + '\n'
    #print(guess_json)
    return guess_json


# Main function communicating with the socket. Can be given an unencoded socket and a wrapped encoded socket to get both results.
def socket_comm(sock):
    sock.send(HELLO_MESSAGE.encode())
    hello_data_json = sock.recv(1024)
    hello_data = json.loads(hello_data_json)
    print(type(hello_data))
    print(hello_data)
    global ID # Global variable being modified
    ID = hello_data['id']
    print(ID)

    # Creating a List of eligible words
    word_list_file = open('project1-words.txt', 'r')
    data = word_list_file.read()
    word_list_file.close()
    word_list = data.split('\n')

    loop = False # Set false when accept reply is given
    while(loop):
        print("Loop here")

    guess = STARTING_WORD
    guess_json = encode_guess(guess)
    sock.send(guess_json.encode())
    guess_reply = sock.recv(1024)
    print('guess reply is:', end = '')
    print(guess_reply)



def wordle_client():
    print("client start")
    host = 'proj1.3700.network'
    port = 27993
    context = ssl.SSLContext(ssl.PROTOCOL_TLS_CLIENT)

    # with socket.create_connection((host, port)) as sock:
    #     with context.wrap_socket(sock, server_hostname=host) as sock_w:
    #         print(sock_w.version())

    #         # Sending the "hello" request message to the server
    #         # Mike note: What you pass into send() might need to be bytes
    #         sock_w.send(HELLO_MESSAGE)

    #         # Receiving the "hello" response message from the server
    #         # Might need to do a recv() here
    #         hello_data_json = socket.recv(1024)
    #         hello_data = json.loads(hello_data_json)
    #         print(hello_data)

    #         loop = False
    #         while(loop):
    #             print('im looping')

    with socket.create_connection((host, port)) as sock:
        socket_comm(sock)






# Entry point of the program LOOK UP WHY THIS IS ON STACK
if __name__ == '__main__':
    wordle_client()
    #encode_guess('slate')
    

